{
  "$schema": "https://json.schemastore.org/tsconfig",

  "display": "Shared node base",

  "compilerOptions": {
    // "moduleResolution": "nodenext",

    // ----
    // https://github.com/sindresorhus/tsconfig/blob/main/tsconfig.json
    "lib": ["dom", "dom.iterable", "es2020"],
    "module": "NodeNext",
    "target": "es2020", // Node.js >=14

    "allowSyntheticDefaultImports": true, // To provide backwards compatibility, Node.js allows you to import most CommonJS packages with a default import. This flag tells TypeScript that it's okay to use import on CommonJS modules.
    "resolveJsonModule": false, // ESM doesn't yet support JSON modules.

    // ----
    // from node18 base, but changed lib/module/target
    "strict": true,
    "esModuleInterop": true,
    "skipLibCheck": true,
    "forceConsistentCasingInFileNames": true,

    // ----
    // Our alterations to the base
    // "allowSyntheticDefaultImports": true,

    // Ensure that .d.ts files are created by tsc
    "declaration": true,
    // Do not allow js
    "allowJs": false,
    // No js, ts, maps when errors are reported
    "noEmitOnError": true,
    // Do not allow inference to fall back to any type
    "noImplicitAny": true,
    // Ensure a return path
    "noImplicitReturns": true,
    // Report errors on unused local variables.
    "noUnusedLocals": false,
    // obj[foo] suppression
    "suppressImplicitAnyIndexErrors": true
  }
}
